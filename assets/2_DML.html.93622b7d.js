import{e as s}from"./app.7d2ff5c0.js";import{_ as n}from"./plugin-vue_export-helper.5a098b48.js";const a={},e=s('<h1 id="数据操纵" tabindex="-1"><a class="header-anchor" href="#数据操纵" aria-hidden="true">#</a> 数据操纵</h1><p>数据操纵语言用于对数据库中的数据进行增删改操作, 有:</p><ul><li><p>插入: <code>INSERT</code></p></li><li><p>修改: <code>UPDATE</code></p></li><li><p>删除: <code>DELETE</code></p></li></ul><h2 id="增加数据" tabindex="-1"><a class="header-anchor" href="#增加数据" aria-hidden="true">#</a> 增加数据</h2><h3 id="第一种插入格式" tabindex="-1"><a class="header-anchor" href="#第一种插入格式" aria-hidden="true">#</a> 第一种插入格式</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment">-- 案例: 给student表插入一个新的学生</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student\n<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;李白&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>上述例子中, 我们按顺序给每一列赋值, 但是, 有时候有的列的值可能暂时为空, 此时我们可以先将其赋值为<code>NULL</code></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment">-- 案例: 7号学生选修了3号课程, 请插入这组数据(由于还没考试, 所以不知道分数)</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> score\n<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token boolean">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>我们也可以自行选择对哪些项赋值, 以及先对哪个项赋值, 剩余的被自动赋值为默认值(默认值是自己建表时设置的)或<code>NULL</code> . 要注意这样的话列的数量和值的数量必须相同.</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment">-- 案例: 插入一个学生, 但是我们还不知道他的姓名和性别</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student<span class="token punctuation">(</span>s_id<span class="token punctuation">,</span> s_age<span class="token punctuation">)</span>\n<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">-- 或</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student<span class="token punctuation">(</span>s_age<span class="token punctuation">,</span> s_id<span class="token punctuation">)</span>\n<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>我们这里并没有讨论数据类型的问题, 但是要注意在建表的时候每一列都会被设置好相应的数据类型, 我们在赋值时要遵循这些数据类型(比如字符串要用单引号或双引号括起来, 日期的格式应该如&#39;1999-12-2&#39;这样). 在DDL中会有更详细的介绍.</p><p>另外有些列的值可以是空值<code>NULL</code> , 而有的则不行, 这些也会在DDL中介绍.</p><h3 id="第二种插入格式" tabindex="-1"><a class="header-anchor" href="#第二种插入格式" aria-hidden="true">#</a> 第二种插入格式</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment">-- 案例: 插入一个学生, 但是我们还不知道他的姓名和性别</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student\n<span class="token keyword">SET</span> s_id<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span> s_age <span class="token operator">=</span> <span class="token number">19</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><hr><h3 id="两种插入对比" tabindex="-1"><a class="header-anchor" href="#两种插入对比" aria-hidden="true">#</a> 两种插入对比</h3><p>方式一可以一次插入多条数据, 而方式二不可以</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student\n<span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;李白&#39;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;李包&#39;</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>方式一可以把SELECT子句作为数据来源</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student\n<span class="token keyword">SELECT</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;光头强&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&#39;女&#39;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> student_A\n<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student_B<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="修改数据" tabindex="-1"><a class="header-anchor" href="#修改数据" aria-hidden="true">#</a> 修改数据</h2><p>修改用<code>UPDATE</code> 语句实现, 我们可以结合<code>WHERE</code> 语句来筛选要修改的列</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment">-- 修改成绩表所有人的成绩为0</span>\n<span class="token keyword">UPDATE</span> score\n<span class="token keyword">SET</span> s_score <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 修改姓为&#39;张&#39;的女生的年龄为18岁</span>\n<span class="token keyword">UPDATE</span> student\n<span class="token keyword">SET</span> s_age <span class="token operator">=</span> <span class="token number">18</span>\n<span class="token keyword">WHERE</span> s_name <span class="token operator">LIKE</span> <span class="token string">&#39;张%&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>也可以用连接语句对某表进行修改</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment">-- 修改1号老师的课程的成绩为0</span>\n<span class="token keyword">UPDATE</span> course\n<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> score\n<span class="token keyword">ON</span> course<span class="token punctuation">.</span>c_id <span class="token operator">=</span> score<span class="token punctuation">.</span>c_id\n<span class="token keyword">SET</span> score<span class="token punctuation">.</span>s_score <span class="token operator">=</span> <span class="token number">0</span>\n<span class="token keyword">WHERE</span> course<span class="token punctuation">.</span>t_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据" aria-hidden="true">#</a> 删除数据</h2><h3 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> DELETE</h3><h3 id="truncate" tabindex="-1"><a class="header-anchor" href="#truncate" aria-hidden="true">#</a> TRUNCATE</h3>',28);var p=n(a,[["render",function(s,n){return e}]]);export{p as default};
