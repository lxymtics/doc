import{r as n,c as s,b as a,a as o,F as e,d as r,e as l,o as t}from"./app.7d2ff5c0.js";import{_ as p}from"./plugin-vue_export-helper.5a098b48.js";const i={},d=a("h1",{id:"mongodb",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#mongodb","aria-hidden":"true"},"#"),r(" MongoDB")],-1),c={href:"https://docs.mongodb.com/",target:"_blank",rel:"noopener noreferrer"},g=r("MongoDB Documentation"),u=l('<h2 id="nosql" tabindex="-1"><a class="header-anchor" href="#nosql" aria-hidden="true">#</a> NoSQL</h2><h3 id="nosql数据库的四大家族" tabindex="-1"><a class="header-anchor" href="#nosql数据库的四大家族" aria-hidden="true">#</a> NoSQL数据库的四大家族</h3><h4 id="键值-key-value-存储" tabindex="-1"><a class="header-anchor" href="#键值-key-value-存储" aria-hidden="true">#</a> 键值(Key-Value)存储</h4><p><strong>特点:</strong> 犍值数据库就像传统语言中使用的哈希表。通过 Key添加、查询或者删除数据。</p><p><strong>优点:</strong> 查询速度快。</p><p><strong>缺点:</strong> 数据无结构化，通常只被当作字符串或者二进制数据存储。</p><p><strong>应用场景:</strong> 内容缓存、用户信息比如会话、配置信息、购物车等，主要用于处理大量数据的高访问负载。</p><p><strong>NoSQL代表:</strong> Redis、Memcached</p><h4 id="文档-document-oriented-存储" tabindex="-1"><a class="header-anchor" href="#文档-document-oriented-存储" aria-hidden="true">#</a> 文档(Document-Oriented)存储</h4><p><strong>特点:</strong> 文档数据库将数据以文档的形式储存，类似JSON，是一系列数据项的集合，每个数据项都有一个名称与对应的值，值既可以是简单的数据类型，如字符串、数字和日期等;也可以是复杂的类型，如有序列表和关联对象。</p><p><strong>优点:</strong> 数据结构要求不严格，表结构可变，不需要像关系型数据库一样需要先定义表结构。</p><p><strong>缺点:</strong> 查询性能不高，缺乏统—的查询语法。</p><p>**应用场景:**日志、 Web应用等。</p><p><strong>NoSQL代表:</strong> MongoDB、CouchDB</p><h4 id="列族-wide-column-store-column-family-存储" tabindex="-1"><a class="header-anchor" href="#列族-wide-column-store-column-family-存储" aria-hidden="true">#</a> 列族(Wide Column Store/Column-Family)存储</h4><p>为大数据准备的</p><p><strong>特点:</strong> 列存储数据库将数据储存在列族(Column Family)中，将多个列聚合成一个列族，键仍然存在，但是它们的特点是指向了多个列。举个例子，如果我们有一个Person类，我们通常会一起查询他们的姓名和年龄而不是薪资。这种情况下，姓名和年龄就会被放入—个列族中，而薪资则在另—个列族中。</p><p><strong>优点:</strong> 列存储查找速度快，可扩展性强，更容易进行分布式扩展，适用于分布式的文件系统，应对分布式存储的海量数据。</p><p><strong>缺点:</strong> 查询性能不高，缺乏统—的查询语法。</p><p><strong>应用场景:</strong> 日志、分布式的文件系统(对象存储)、推荐画像、时空数据、消息/订单等。 <strong>NoSQL代表:</strong> Cassandra、HBase</p><h4 id="图形-graph-oriented-存储" tabindex="-1"><a class="header-anchor" href="#图形-graph-oriented-存储" aria-hidden="true">#</a> 图形(Graph-Oriented)存储</h4><p><strong>特点:</strong> 图形数据库允许我们将数据以图的方式储存。</p><p><strong>优点:</strong> 图形相关算法。比如最短承径寻址，N度关系查找等。</p><p><strong>缺点:</strong> 很多时候需要对整个图做计算才能得出需要的信息，分布式的集群方案不好做，处理超级节点乏力，没有分片存储机制，国内社区不活跃。</p><p><strong>应用场景:</strong> 社交网络，推荐系统等。专注于构建关系图谱。</p><p><strong>NoSQL代表:</strong> Neo4j、 Infinite Graph...</p><h3 id="nosql的优缺点" tabindex="-1"><a class="header-anchor" href="#nosql的优缺点" aria-hidden="true">#</a> NoSQL的优缺点</h3><p><strong>优点</strong></p><ul><li>高可扩展性</li><li>没有标准化</li><li>分布式计算</li><li>有限的查询功能</li><li>低成本</li></ul><p><strong>缺点</strong></p><ul><li>最终一致不是直观的程序</li><li>架构的灵活性, 半结构化数据</li><li>没有复杂的关系</li></ul><p><strong>总结</strong></p><p>NoSQL数据库在以下几种情况比较适用:</p><ul><li>数据模型比较简单</li><li>需要灵活性更强的IT系统</li><li>对数据库性能要求较高</li><li>不需要高度的数据一致性</li><li>对于给定的Key, 比较容易映射复杂的环境</li></ul><h2 id="mongodb-1" tabindex="-1"><a class="header-anchor" href="#mongodb-1" aria-hidden="true">#</a> MongoDB</h2><p><strong>MongoDB</strong>是一个开源、高性能、无模式的文档型数据库，当初的设计就是用于简化开发和方便扩展，是NoSQL数据库产品中的一种。是<strong>最像关系型数据库（MySQL）的非关系型数据库</strong>。</p><p>它支持的数据结构非常松散，是一种类似于 JSON 的 格式叫<strong>BSON</strong>，所以它既可以存储比较复杂的数据类型，又相当的灵活。</p><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3>',38),b=a("p",null,"安装相关文档：",-1),h={href:"https://docs.mongodb.com/manual/installation/",target:"_blank",rel:"noopener noreferrer"},m=r("Install MongoDB — MongoDB Manual"),f={href:"https://docs.microsoft.com/zh-cn/windows/wsl/tutorials/wsl-database#install-mongodb",target:"_blank",rel:"noopener noreferrer"},v=r("使用 WSL 添加或连接数据库 MongoDB | Microsoft Docs"),k={href:"https://www.mongodb.com/try/download/community",target:"_blank",rel:"noopener noreferrer"},x=r("MongoDB Community Download | MongoDB"),D=l('<p><code>Ubuntu</code>：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> mongodb\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>创建用于存放数据和日志的文件夹，并修改其权限增加读写权限</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 创建存放数据的目录</span>\n<span class="token function">mkdir</span> -p /usr/local/mongodb/data/db\n\n<span class="token comment"># 创建存放日志的目录</span>\n<span class="token function">mkdir</span> -p /usr/local/mongodb/logs\ne\n<span class="token comment"># 创建日志记录文件</span>\n<span class="token function">touch</span> /usr/local/mongodb/logs/mongodb.log\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 结果</span>\n/usr/local/mongodb/\n├── data\n│   └── db\n└── logs\n    └── mongodb.log\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>前台启动：</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mongod --dbpath /usr/local/mongodb/data/db --logpath /usr/local/mongodb/logs/mongodb.log --logappend --port <span class="token number">27017</span> --bind_ip <span class="token number">0.0</span>.0.0\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>后台启动：</strong></p><p>加<code>--fork</code>参数</p><p><strong>配置文件启动（推荐）：</strong></p><p><strong>结束：</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mongodb -f bin/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h3>',13);var S=p(i,[["render",function(r,l){const p=n("OutboundLink");return t(),s(e,null,[d,a("p",null,[a("a",c,[g,o(p)])]),u,a("blockquote",null,[b,a("ul",null,[a("li",null,[a("a",h,[m,o(p)])]),a("li",null,[a("a",f,[v,o(p)])]),a("li",null,[a("a",k,[x,o(p)])])])]),D],64)}]]);export{S as default};
